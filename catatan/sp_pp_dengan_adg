create procedure [dbo].[pp_bdy_v3] (
	@kode_farm varchar(10),
	@noreg varchar(30),
	@tgl_kebutuhan_awal date,
	@tgl_kebutuhan_akhir date,
	@tgl_awal_ganti_pakan date
)
/* manambahkan ADG sebagai komponen penentu rekomendasi pakan */
as
begin
SET NOCOUNT ON;
declare @umur int,@pakan1 varchar(30),@pakan2 varchar(30),@jml_ganti_pakan int, @keb_pakan int, @adg_pengali float,@tmp_adg_pengali float
declare @umur_awal int,@umur_akhir int,@std_budidaya varchar(20),@docin date
declare @ganti_pakan table(
	umur int,
	pakan varchar(30),
	komposisi_pakan decimal(5,2),
	kebutuhan_pakan int
)
/* cari docin dan standart yang digunakan */
select ks.*
	,datediff(day,ks.tgl_doc_in,@tgl_kebutuhan_awal) umur_awal
	,datediff(day,ks.tgl_doc_in,@tgl_kebutuhan_akhir) umur_akhir
into #ks
from kandang_siklus ks
where ks.no_reg = @noreg 

select top 1
	@umur_awal = ks.umur_awal,
	@umur_akhir = ks.umur_akhir,
	@std_budidaya = ks.KODE_STD_BUDIDAYA,
	@docin = ks.tgl_doc_in	
from #ks ks
select x.umur_awal umur_awal
	,x.kode_barang
	,ROW_NUMBER() over(order by x.umur_awal) urut_pakan
 into #tmp_ganti_pakan_std
from (
select max(md.std_umur) - 1 umur_awal,md.kode_barang from M_STD_BUDIDAYA_D md
	where md.KODE_STD_BUDIDAYA = @std_budidaya 
	group by md.kode_barang
) x
order by x.umur_awal

-- cari tanggal awal ganti pakan
select datediff(day,@docin,min(le.tgl_kebutuhan)) umur_awal
				,gps.urut_pakan - 1 urut_ganti
		 into #awal_ganti_pakan
		 from lpb l
				inner join lpb_e le
					on l.no_lpb = le.no_lpb and le.no_reg = @noreg
					and le.komposisi_pakan = .25
					and le.TGL_KEBUTUHAN < @tgl_kebutuhan_awal
				join #tmp_ganti_pakan_std gps
					on gps.kode_barang = le.kode_barang  and gps.urut_pakan > 1
		where l.status_lpb = 'A'
				group by gps.urut_pakan
select  coalesce(y.umur_awal,x.umur_awal) umur_awal
		,x.kode_barang
		,x.urut_pakan
	into #ganti_pakan_std
from
	#tmp_ganti_pakan_std x
	left join #awal_ganti_pakan y
	on y.urut_ganti = x.urut_pakan


-- cari jumlah pergantian pakan
--select @jml_ganti_pakan = count(*) + 1
select @jml_ganti_pakan = (select count(*) + 1 from #awal_ganti_pakan)

 -- jika @tgl_awal_ganti_pakan tidak null berarti sudah ada roses pergantian pakan
 if @tgl_awal_ganti_pakan is not null and @jml_ganti_pakan < (select count(*) from #ganti_pakan_std)
	update #ganti_pakan_std set umur_awal = datediff(day,@docin,@tgl_awal_ganti_pakan) where urut_pakan = @jml_ganti_pakan
 else if @umur_awal > (select umur_awal from #ganti_pakan_std where urut_pakan = @jml_ganti_pakan) and @jml_ganti_pakan < (select count(*) from #ganti_pakan_std)
  	update #ganti_pakan_std set umur_awal = datediff(day,@docin,@tgl_kebutuhan_awal) where urut_pakan = @jml_ganti_pakan

declare @tmp_awal int = 1, @tmp_akhir int, @selisih int, @awal_ganti int, @pakan_sebelumnya varchar(30)
DECLARE CUR CURSOR FOR
select t.umur_awal
		,t.kode_barang
		,t2.kode_barang
from #ganti_pakan_std t
left join #ganti_pakan_std t2
	on (t.urut_pakan + 1 ) = t2.urut_pakan
-- where t2.kode_barang is not null

OPEN CUR
FETCH NEXT FROM CUR INTO @umur, @pakan1, @pakan2
WHILE @@FETCH_STATUS = 0 BEGIN
	set @tmp_akhir = @umur
	while(@tmp_awal <= @tmp_akhir) begin
	set @keb_pakan = (select PKN_HR from M_STD_BUDIDAYA_D where KODE_STD_BUDIDAYA = @std_budidaya and STD_UMUR = @tmp_awal)
	set @selisih = @tmp_awal - @awal_ganti
		if @selisih = 0 and @pakan2 is not null
			begin
				insert into @ganti_pakan
			select *
			from
			(
				select @tmp_awal umur
					,@pakan1 pakan1
					,.75 'komposisi_pakan'
					,@keb_pakan keb_pakan
				union all
				select @tmp_awal umur
					,@pakan2 pakan1
					,.25 'komposisi_pakan'
					,@keb_pakan keb_pakan
			)x
			end
		else if @selisih = 1 -- and @pakan2 is not null
			begin
				insert into @ganti_pakan
			select *
			from
			(
				select @tmp_awal umur
					,@pakan1 pakan1
					,.5 'komposisi_pakan'
					,@keb_pakan keb_pakan
				union all
				select @tmp_awal umur
					,@pakan_sebelumnya pakan1
					,.5 'komposisi_pakan'
					,@keb_pakan keb_pakan
			)x
			end
		else if @selisih = 2 -- and @pakan2 is not null
			begin
				insert into @ganti_pakan
			select *
			from
			(
				select @tmp_awal umur
					,@pakan1 pakan1
					,.75 'komposisi_pakan'
					,@keb_pakan keb_pakan
				union all
				select @tmp_awal umur
					,@pakan_sebelumnya pakan1
					,.25 'komposisi_pakan'
					,@keb_pakan keb_pakan
			)x
			end
		else begin
				insert into @ganti_pakan
			select *
			from
			(
				select @tmp_awal umur
					,@pakan1 pakan1
					,1 'komposisi_pakan'
					,@keb_pakan keb_pakan
			)x
			end
		set @tmp_awal = @tmp_awal + 1
		if @umur = @tmp_awal
		begin
			set @pakan_sebelumnya = @pakan1
			set @awal_ganti = @umur
		end
	end

FETCH NEXT FROM CUR INTO @umur, @pakan1, @pakan2
end
CLOSE CUR
DEALLOCATE CUR


-- cari lhk terakhir dan pengali adg
select lhk_adg.* 
		,case 
			when (lhk_adg.adg is null or lhk_adg.adg_standart is null) then 1
			else (lhk_adg.adg / lhk_adg.adg_standart)
		end adg_pengali
into #lhk
from (
	select lhk_tmp.tgl_transaksi
			,lhk_tmp.no_reg
			,lhk_tmp.populasi
			,lhk_tmp.berat_badan
			,lhk_tmp.kons
			,lhk_tmp.kons_standart
			,lhk_tmp.adg
			,lhk_tmp.adg_standart
	from (
		select rhk.tgl_transaksi
				,rhk.no_reg
				,rhk.C_JUMLAH populasi
				,rhk.C_BERAT_BADAN berat_badan
				,(select (sum(BRT_PAKAI) / rhk.C_JUMLAH) * 1000  from rhk_pakan where rhk_pakan.NO_REG = rhk.no_reg and rhk_pakan.TGL_TRANSAKSI = rhk.tgl_transaksi) as kons
				,(select PKN_HR from M_STD_BUDIDAYA_D where KODE_STD_BUDIDAYA = @std_budidaya and STD_UMUR = datediff(day,@docin,rhk.tgl_transaksi) ) as kons_standart
				-- berat badan kemarin atau saat timbang
				,dbo.ADG_VALUE(@noreg,r.lhk_terakhir) as adg
				,dbo.ADGSTANDART_VALUE(@noreg,r.lhk_terakhir) as adg_standart						
		from rhk
		inner join(
			select max(tgl_transaksi) lhk_terakhir,no_reg
			from rhk
			where no_reg = @noreg
			group by no_reg
		)r
		on r.lhk_terakhir = rhk.tgl_transaksi and r.no_reg = rhk.no_reg
	)lhk_tmp
)lhk_adg
-- set default
set @tmp_adg_pengali = (select top 1 adg_pengali from #lhk)
set @adg_pengali = 1
if @tmp_adg_pengali is not null set @adg_pengali = @tmp_adg_pengali

select ks.kode_kandang,
	gp.pakan kode_barang,
	convert(float,coalesce(l.populasi,ks.jml_populasi) * gp.kebutuhan_pakan )/50000 kebutuhan_pakan_standart,
	convert(float,coalesce(l.populasi,ks.jml_populasi) * gp.kebutuhan_pakan * coalesce(gp.komposisi_pakan,1) * @adg_pengali)/50000 kebutuhan_pakan,
	ks.no_reg,
	l.tgl_transaksi lhk_terakhir,
	l.adg,
	l.adg_standart,
	l.kons,
	l.kons_standart,
	coalesce(l.populasi,ks.jml_populasi) populasi,
	dateadd(day,gp.umur,@docin) tglkebutuhan,
	gp.umur umur,
	mb.nama_barang nama_barang,
	dbo.BENTUK_CONVERTION(mb.bentuk_barang) bentuk,
	case
		when gp.komposisi_pakan is null then 1
		else gp.komposisi_pakan
	end komposisi_pakan
from #ks ks
inner join @ganti_pakan gp
	on gp.umur between @umur_awal and @umur_akhir
inner join m_barang mb
	on mb.KODE_BARANG = gp.pakan
left join #lhk l
	on l.NO_REG = ks.NO_REG
left join #ganti_pakan_std gps
	on gps.kode_barang = gp.pakan
order by gps.urut_pakan,gp.umur

drop table #ks
drop table #lhk
drop table #ganti_pakan_std
drop table #tmp_ganti_pakan_std
drop table #awal_ganti_pakan
end;


create PROCEDURE [dbo].[pp_bdy_approve_v2]
	@no_lpb varchar(25) 
AS
BEGIN
	
	SET NOCOUNT ON;

/* cari docin dan standart yang digunakan */
select * 
into #ks
from kandang_siklus
where no_reg in (select distinct no_reg from lpb_e where no_lpb = @no_lpb)
select * 
into #rv
from review_lpb_budidaya where no_lpb = @no_lpb
select le.KODE_BARANG kode_barang
	,k.KODE_KANDANG kode_kandang
	,le.JML_PERFORMANCE kebutuhan_pakan
	,le.KOMPOSISI_PAKAN komposisi_pakan 
	,le.JML_ORDER pp
	,le.NO_REG no_reg
	,le.TGL_KEBUTUHAN tglkebutuhan
	,le.TGL_LHK lhk_terakhir
	,dbo.ADG_VALUE(le.NO_REG,le.TGL_LHK) as adg
	,dbo.ADGSTANDART_VALUE(le.NO_REG,le.TGL_LHK) as adg_standart
	,(select (sum(rhk_pakan.BRT_PAKAI) / rhk.C_JUMLAH) * 1000  from rhk_pakan where rhk_pakan.NO_REG = rhk.no_reg and rhk_pakan.TGL_TRANSAKSI = rhk.tgl_transaksi) as kons
	,(select PKN_HR from M_STD_BUDIDAYA_D where KODE_STD_BUDIDAYA = k.kode_std_budidaya and STD_UMUR = datediff(day,k.tgl_doc_in,rhk.tgl_transaksi) ) as kons_standart
	,datediff(day,k.TGL_DOC_IN,le.TGL_KEBUTUHAN) umur
	,coalesce(rhk.C_JUMLAH,k.jml_populasi) populasi
	,mb.NAMA_BARANG nama_barang
	,dbo.BENTUK_CONVERTION(mb.BENTUK_BARANG) bentuk
into #l 
from lpb_e le
inner join #ks k
	on le.NO_REG = k.NO_REG
inner join m_barang mb
	on mb.KODE_BARANG = le.KODE_BARANG
left join rhk 
	on rhk.NO_REG = le.NO_REG and rhk.TGL_TRANSAKSI = le.TGL_LHK
where no_lpb = @no_lpb

select * from #l order by umur,kode_kandang

drop table #ks
drop table #rv
drop table #l
end;


create procedure [dbo].[pp_bdy_pakan_tambahan_v3] (
	@noreg varchar(30),	
	@tgl_kebutuhan_awal date,
	@tgl_kebutuhan_akhir date,	
	@kode_pakan varchar(30)
)
as
begin
SET NOCOUNT ON;
declare @umur int,@pakan varchar(30) = @kode_pakan
declare @umur_awal int,@umur_akhir int,@std_budidaya varchar(20),@docin date
declare @tmp_akhir date, @tmp_awal date

declare @kebutuhan table(
	tgl_kebutuhan date,
	no_reg varchar(30)
)
/* cari docin dan standart yang digunakan */
select ks.*
into #ks
from kandang_siklus ks
where ks.no_reg = @noreg

set @tmp_akhir = @tgl_kebutuhan_akhir
set @tmp_awal = @tgl_kebutuhan_awal
	while(@tmp_awal <= @tmp_akhir) 
	begin
	insert into @kebutuhan
	select @tmp_awal,@noreg
	set @tmp_awal = dateadd(day,1,@tmp_awal)
	end
-- cari lhk terakhir
select rhk.tgl_transaksi
		,rhk.no_reg
		,rhk.C_JUMLAH populasi
into #lhk
from rhk
inner join(
	select max(tgl_transaksi) lhk_terakhir,rhk.no_reg
	from rhk
	join #ks ks on ks.no_reg = rhk.no_reg
	where rhk.tgl_buat <= getdate()
	group by rhk.no_reg
)r
on r.lhk_terakhir = rhk.tgl_transaksi and r.no_reg = rhk.no_reg

select ks.kode_kandang,
	@pakan kode_barang,
	0 kebutuhan_pakan_standart,
	0 kebutuhan_pakan,
	ks.no_reg,
	l.tgl_transaksi lhk_terakhir,
	0 as adg,
	0 as adg_standart,
	0 as kons,
	0 as kons_standart,
	coalesce(l.populasi,ks.jml_populasi) populasi,
	kb.tgl_kebutuhan tglkebutuhan,
	datediff(day,ks.tgl_doc_in,kb.tgl_kebutuhan) umur,
	mb.nama_barang nama_barang,
	dbo.BENTUK_CONVERTION(mb.bentuk_barang) bentuk,
	0 komposisi_pakan
from #ks ks
inner join m_barang mb
	on mb.KODE_BARANG = @pakan
left join @kebutuhan kb
	on kb.no_reg = ks.no_reg
left join #lhk l on l.no_reg = ks.no_reg
order by ks.no_reg

drop table #ks
drop table #lhk
end


-- =============================================
-- Author:		<Author, WJC>
-- Create date: <Create Date, 2019-11-22>
-- Description:	<Description, Get ADG based noreg and rhk transaction date>
-- =============================================
create FUNCTION [dbo].[ADG_VALUE] 
(
	-- Add the parameters for the function here
	@NO_REG VARCHAR(30)
	,@TGL_TRANSAKSI DATE
)
RETURNS FLOAT
AS
BEGIN
	-- Declare the return variable here
	DECLARE @RESULT FLOAT
 	IF @TGL_TRANSAKSI IS NULL  RETURN @RESULT
	DECLARE @UMUR INT
	DECLARE @BB_AWAL FLOAT, @BB_SEKARANG FLOAT 
	SET @UMUR = (SELECT DATEDIFF(DAY,(SELECT TGL_DOC_IN FROM KANDANG_SIKLUS WHERE NO_REG = @NO_REG),@TGL_TRANSAKSI) )
	
	IF @UMUR < 2
		BEGIN
			SET @BB_AWAL = (select top 1 BB_RATA2 from dbo.BAP_DOC where NO_REG = @NO_REG)
		END
	ELSE 
		BEGIN
			SET @BB_AWAL = (select top  1 C_BERAT_BADAN * 1000 from rhk where NO_REG = @NO_REG and TGL_TRANSAKSI = dateadd(day,-1,@TGL_TRANSAKSI) )
		END 
		
	SET @RESULT = (SELECT TOP  1 C_BERAT_BADAN * 1000 FROM RHK WHERE NO_REG = @NO_REG AND TGL_TRANSAKSI = @TGL_TRANSAKSI) - @BB_AWAL
	RETURN @RESULT

END


-- =============================================
-- Author:		<Author, WJC>
-- Create date: <Create Date, 2019-11-22>
-- Description:	<Description, Get ADG based noreg and rhk transaction date>
-- =============================================
create FUNCTION [dbo].[ADGSTANDART_VALUE] 
(
	-- Add the parameters for the function here
	@NO_REG VARCHAR(30)
	,@TGL_TRANSAKSI DATE
)
RETURNS FLOAT
AS
BEGIN
	-- Declare the return variable here
	DECLARE @RESULT FLOAT
 	IF @TGL_TRANSAKSI IS NULL  RETURN @RESULT
	DECLARE @UMUR INT
	DECLARE @BB_AWAL FLOAT, @BB_SEKARANG FLOAT 
	DECLARE @DOCIN DATE, @KODESTDBUDIDAYA VARCHAR(30)
	
	SELECT @DOCIN = TGL_DOC_IN,@KODESTDBUDIDAYA = KODE_STD_BUDIDAYA FROM KANDANG_SIKLUS WHERE NO_REG = @NO_REG
	SET @UMUR = (SELECT DATEDIFF(DAY,@DOCIN,@TGL_TRANSAKSI) )
	
	IF @UMUR < 2
		BEGIN
			SET @BB_AWAL = (select top 1 BB_RATA2 from dbo.BAP_DOC where NO_REG = @NO_REG)
		END
	ELSE 
		BEGIN
			SET @BB_AWAL = (select top  1 TARGET_BB from dbo.M_STD_BUDIDAYA_D where KODE_STD_BUDIDAYA = @KODESTDBUDIDAYA and STD_UMUR = @UMUR - 1 )
		END 
		
	SET @RESULT = (select top  1 TARGET_BB from dbo.M_STD_BUDIDAYA_D where KODE_STD_BUDIDAYA = @KODESTDBUDIDAYA and STD_UMUR = @UMUR) - @BB_AWAL
	RETURN @RESULT

END


INSERT INTO dbo.SYS_CONFIG_GENERAL (KODE_FARM,KODE_CONFIG,DESCRIPTION,CONTEXT,VALUE,STATUS) VALUES 
('0','maxKebutuhanPakan','N hari kebutuhan pakan ( default 3)','aktivasiSiklus','3','1'),
('0','maxKebutuhanPakanDoc','N hari kebutuhan pakan awal docin( default 7)','aktivasiSiklus','7','1'),
('0','maxKebutuhanHarian','N hari kebutuhan pakan harian ( default 1)','aktivasiSiklus','1','1'),
('0','umurPakanHarian','N umur sebelum pakan harian ( default 19)','aktivasiSiklus','19','1'),
('0','ppAkanPanen','N umur akan panen ( default 22)','aktivasiSiklus','22','1')
